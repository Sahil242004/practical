Write a PL/SQL block of code using parameterized Cursor, that will merge the data available in the newly created table N_RollCall with the data available in the table O_Roll-call.
If the data in the first table already exists in the second table, then that data should be skipped.


CREATE TABLE O_RollCall (
  roll_no NUMBER PRIMARY KEY,
  name VARCHAR2(100),
  class VARCHAR2(100)
);
CREATE TABLE N_RollCall (
  roll_no NUMBER PRIMARY KEY,
  name VARCHAR2(100),
  class VARCHAR2(100)
);

INSERT INTO O_RollCall(roll_no,name,class) VALUES(1,'pratiksha','AI');
INSERT INTO O_RollCall(roll_no,name,class) VALUES(2,'pranav','AIDS');
INSERT INTO O_RollCall(roll_no,name,class) VALUES(3,'Kirti','AI');
INSERT INTO O_RollCall(roll_no,name,class) VALUES(4,'pravin','AIDS');
INSERT INTO O_RollCall(roll_no,name,class) VALUES(5,'Rajni','AI');

SELECT * FROM O_RollCall;

INSERT INTO N_RollCall(roll_no,name,class) VALUES(6,'sriya','Comp');
INSERT INTO N_RollCall(roll_no,name,class) VALUES(7,'swati','AIDS');
INSERT INTO N_RollCall(roll_no,name,class) VALUES(8,'suraj','AI');
INSERT INTO N_RollCall(roll_no,name,class) VALUES(4,'Shradha','AIDS');
INSERT INTO N_RollCall(roll_no,name,class) VALUES(5,'alia','AI');

SELECT * FROM N_RollCall;

COMMIT;

DECLARE

v_roll_no O_RollCall.roll_no%TYPE;
v_name O_RollCall.name%TYPE;
v_class O_RollCall.class%TYPE;

CURSOR newrecords IS SELECT roll_no,name,class FROM O_RollCall WHERE roll_no NOT IN(SELECT roll_no FROM N_RollCall);

BEGIN
OPEN newrecords;
LOOP
FETCH newrecords INTO v_roll_no,v_name,v_class;

EXIT WHEN newrecords%NOTFOUND;

INSERT INTO N_RollCall(roll_no,name,class)VALUES(v_roll_no,v_name,v_class);
END LOOP;
CLOSE newrecords;
 END;
/

SELECT * FROM O_RollCall;

